apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: {{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        appVersion: {{ .Chart.AppVersion }}
        helmVersion: {{ .Chart.Version }}
        env: {{ .Values.env }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          {{- if eq .Values.image.tag "latest"}}
          image: "{{ .Values.image.name }}/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
          {{- else}}
          image: "{{ .Values.image.devRepo }}/{{ .Chart.Name }}:{{ .Values.image.tag }}"
          {{- end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-server
              containerPort: {{ .Values.container.http.port }}
            - name: https-server
              containerPort: {{ .Values.container.https.port }}
          readinessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.http.port }}
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.http.port }}
            initialDelaySeconds: 300
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: SECURITY_USER_NAME
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-user
          - name: SECURITY_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-password
          - name: SECURITY_BASIC_ENABLED
            value: "true"
          - name: RABBITMQ_HOST
            {{- if .Values.managedRabbitMQ.enabled }}
            valueFrom:
              configMapKeyRef:
                name: rabbit-config
                key: rabbit-mq-host
            {{- else }}
            value: "$(RABBITMQ_SERVICE_HOST)"
            {{- end }}
          - name: RABBITMQ_PORT
            {{- if .Values.managedRabbitMQ.enabled }}
            valueFrom:
              configMapKeyRef:
                name: rabbit-config
                key: rabbit-mq-port
            {{- else }}
            value: "$(RABBITMQ_SERVICE_PORT)"
            {{- end }}
          - name: RABBITMQ_USERNAME
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: rabbitmq-username
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: rabbitmq-password
          - name: REDIS_HOST
            {{- if .Values.database.managedRedis }}
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis-host
            {{- else }}
            value: "$(REDIS_MASTER_SERVICE_HOST)"
            {{- end }}
          - name: REDIS_PORT
            {{- if .Values.database.managedRedis }}
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis-port
            {{- else }}
            value: "$(REDIS_MASTER_SERVICE_PORT)"
            {{- end}}
          - name: DATA_GRID_ADDRESS
            value: "$(REDIS_HOST):$(REDIS_PORT)"
          - name: SFTP_HOST
            {{- if .Values.sftp.test.enabled }}
            value: "$(SFTP_SERVICE_HOST)"
            {{- else }}
            value: {{ .Values.sftp.host }}
            {{- end }}
          - name: SFTP_PORT
            value: "22"
          - name: SFTP_USERNAME
            valueFrom:
              secretKeyRef:
                name: sftp-secret
                key: sftp-sdxgateway-user
          - name: SFTP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sftp-secret
                key: sftp-sdxgateway-password
          - name: SERVER_PORT
            value: "{{ .Values.container.https.port }}"
          - name: SERVER_HTTP_PORT
            value: "{{ .Values.container.http.port }}"
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
